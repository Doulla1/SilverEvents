name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Run Tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: .svelte-kit

  deploy:
    runs-on: ubuntu-latest   # Utiliser l'image Ubuntu la plus récente comme environnement d'exécution

    environment:
      name: 'MyPlesk'   # Nom de l'environnement de déploiement

    steps:
      - name: Checkout code   # Étape pour récupérer le code source depuis le dépôt GitHub
        uses: actions/checkout@v3

      - name: Deploy to Server   # Étape pour déployer sur le serveur
        uses: appleboy/ssh-action@master   # Utiliser l'action SSH pour effectuer le déploiement
        with:
          host: ${{ secrets.SERVER_HOST }}   # Adresse IP ou nom d'hôte du serveur
          username: ${{ secrets.SERVER_USERNAME }}   # Nom d'utilisateur pour la connexion SSH
          key: ${{ secrets.SSH_PRIVATE_KEY }}   # Clé privée SSH pour l'authentification
          script: |
            # Naviguer dans le répertoire du projet sur le serveur
            cd /var/www/vhosts/silver-events.fr/SilverEvents/
            
            # Mettre à jour le code source depuis la branche principale
            git pull origin main
            
            # Installer les dépendances du projet
            npm ci
            
            # Compiler le projet SvelteKit
            npm run build
            
            # Exécuter les migrations Prisma pour MySQL
            npx prisma migrate deploy
            
            # Redémarrer l'application SvelteKit (assurez-vous que vous utilisez un gestionnaire de processus comme PM2)
            pm2 restart all